@startuml database_design

object User {
  Id: int <<PK>>
  email: string
  passwordHash: string
  isActive: boolean
  isBanned: boolean
  role: enum
  createdAt: Date
  updatedAt: Date
}

object Profile {
  Id: int <<PK>>
  userId: int <<FK to User.Id>>
  username: string
  bio: string
  gender: enum {male, female, other}
  birthdate: Date
  location: string
  createdAt: Date
  updatedAt: Date
}

object Photo {
  Id: int <<PK>>
  profileId: int <<FK to Profile.Id>>
  url: string
  order: int
  createdAt: Date
}

object Preference {
  Id: int <<PK>>
  profileId: int <<FK to Profile.Id>>
  minAge: int
  maxAge: int
  maxDistance: int
  gender_preference: enum {male, female, both, other}
  createdAt: Date
  updatedAt: Date
}

object Swipe {
  Id: int <<PK>>
  swiperId: int <<FK to User.Id>>
  swipedId: int <<FK to User.Id>>
  action: enum {like, dislike, superlike}
  createdAt: Date
}

object Match {
  Id: int <<PK>>
  user1Id: int <<FK to User.Id>>
  user2Id: int <<FK to User.Id>>
  createdAt: Date
  isActive: boolean
}

object Message {
  Id: int <<PK>>
  matchId: int <<FK to Match.Id>>
  senderId: int <<FK to User.Id>>
  content: string
  createdAt: Date
  isRead: boolean
}

object Notification {
  Id: int <<PK>>
  userId: int <<FK to User.Id>>
  content: string
  type: enum {match, message, subscription, other}
  createdAt: Date
  isRead: boolean
}

object Subscription {
  Id: int <<PK>>
  userId: int <<FK to User.Id>>
  plan: enum {basic, premium, plus}
  startDate: Date
  endDate: Date
  isActive: boolean
  createdAt: Date
  updatedAt: Date
}

object Report {
  Id: int <<PK>>
  reporterId: int <<FK to User.Id>>
  reportedId: int <<FK to User.Id>>
  reason: string
  createdAt: Date
  + unique(reporterId, reportedId)
}

object Block {
  Id: int <<PK>>
  blockerId: int <<FK to User.Id>>
  blockedId: int <<FK to User.Id>>
  createdAt: Date
  + unique(blockerId, blockedId)
}

' Các mối quan hệ
User ||--|| Profile : has
Profile ||--|| Preference : has
Profile ||--o{ Photo : has

User ||--o{ Swipe : "swiper"
User ||--o{ Swipe : "swiped"

User ||--o{ Match : "user1"
User ||--o{ Match : "user2"

Match ||--o{ Message : has
User ||--o{ Message : sends

User ||--o{ Notification : receives
User ||--o{ Subscription : has

User ||--o{ Report : "reporter"
User ||--o{ Report : "reported"

User ||--o{ Block : "blocker"
User ||--o{ Block : "blocked"

@enduml